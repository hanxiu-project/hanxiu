<p style="text-align:start"><span style="font-size:16px"><span style="color:#191919"><span style="font-family:微軟正黑體,sans-serif,Lato,游ゴシック体,&quot;Yu Gothic&quot;,YuGothic,&quot;ヒラギノ角ゴシック Pro&quot;,&quot;Hiragino Kaku Gothic Pro&quot;,メイリオ,&quot;Meiryo,Osaka&quot;,&quot;ＭＳ Ｐゴシック&quot;,&quot;MS PGothic&quot;"><span style="background-color:#ffffff">&bull;On: 表示每次輸出(如echo,print)後自動呼叫flush()函式後,直接輸出<br />
&bull;Off: 與On相反,每次輸出後不會呼叫flush(),需要等到server buffering滿了才會輸出,但是我們可以用flush()函式代替它,不開啟也沒關係,反而更加靈活</span></span></span></span></p>

<p style="text-align:start"><span style="font-size:16px"><span style="color:#191919"><span style="font-family:微軟正黑體,sans-serif,Lato,游ゴシック体,&quot;Yu Gothic&quot;,YuGothic,&quot;ヒラギノ角ゴシック Pro&quot;,&quot;Hiragino Kaku Gothic Pro&quot;,メイリオ,&quot;Meiryo,Osaka&quot;,&quot;ＭＳ Ｐゴシック&quot;,&quot;MS PGothic&quot;"><span style="background-color:#ffffff"><strong>3.ob_flush()函式: 取出PHP buffering中的資料,放入server buffering</strong></span></span></span></span></p>

<p style="text-align:start"><span style="font-size:16px"><span style="color:#191919"><span style="font-family:微軟正黑體,sans-serif,Lato,游ゴシック体,&quot;Yu Gothic&quot;,YuGothic,&quot;ヒラギノ角ゴシック Pro&quot;,&quot;Hiragino Kaku Gothic Pro&quot;,メイリオ,&quot;Meiryo,Osaka&quot;,&quot;ＭＳ Ｐゴシック&quot;,&quot;MS PGothic&quot;"><span style="background-color:#ffffff"><strong>4.flush()函式: 取出Server buffering的資料,放入browser buffering</strong><br />
<br />
<strong>5.ob_start()函式:</strong>對於這個函式我現在瞭123解的不是很清楚,因為開啟後輸出就會不受ob_flush()控制,即使使用ob_flush()和flush(),資料也不能立即輸出在瀏覽器上.現在知道的是,如果output_buffering=Off,即使使用了ob_start(),也是無法將輸出資料快取的,而如果output_buffering=On的話,即使不用ob_start(),輸出資料也可以被PHP快取,所以覺得ob_start比較廢,暫時不管他<br />
&nbsp;<br />
然後我們來看程式碼吧(設定output_buffering=4096,implicit_flush=Off)<br />
<u>複製程式碼</u>&nbsp;程式碼如下:</span></span></span></span></p>
